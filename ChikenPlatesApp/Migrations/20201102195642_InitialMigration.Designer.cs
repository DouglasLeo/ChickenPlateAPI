// <auto-generated />
using ChikenPlatesApp.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace ChikenPlatesApp.Migrations
{
    [DbContext(typeof(ChickenContext))]
    [Migration("20201102195642_InitialMigration")]
    partial class InitialMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("ChikenPlatesApp.Models.ChickenPart", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    b.Property<string>("PartName")
                        .IsRequired()
                        .HasColumnType("varchar(250) CHARACTER SET utf8mb4")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.ToTable("ChickenParts");
                });

            modelBuilder.Entity("ChikenPlatesApp.Models.ChickenPlate", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    b.Property<decimal>("ChickenAmount")
                        .HasColumnType("decimal(65,30)");

                    b.Property<long>("DishId")
                        .HasColumnType("bigint");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(250) CHARACTER SET utf8mb4")
                        .HasMaxLength(250);

                    b.Property<long>("PartId")
                        .HasColumnType("bigint");

                    b.Property<string>("Sauce")
                        .IsRequired()
                        .HasColumnType("varchar(250) CHARACTER SET utf8mb4")
                        .HasMaxLength(250);

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("DishId");

                    b.HasIndex("PartId");

                    b.ToTable("ChickenPlates");
                });

            modelBuilder.Entity("ChikenPlatesApp.Models.Drink", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    b.Property<long>("ChickenPlateId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("ChickenPlateId");

                    b.ToTable("Drinks");
                });

            modelBuilder.Entity("ChikenPlatesApp.Models.SideDish", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    b.Property<string>("DishName")
                        .IsRequired()
                        .HasColumnType("varchar(250) CHARACTER SET utf8mb4")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.ToTable("SideDishes");
                });

            modelBuilder.Entity("ChikenPlatesApp.Models.ChickenPlate", b =>
                {
                    b.HasOne("ChikenPlatesApp.Models.SideDish", "Dish")
                        .WithMany()
                        .HasForeignKey("DishId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ChikenPlatesApp.Models.ChickenPart", "Part")
                        .WithMany()
                        .HasForeignKey("PartId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ChikenPlatesApp.Models.Drink", b =>
                {
                    b.HasOne("ChikenPlatesApp.Models.ChickenPlate", "ChickenPlate")
                        .WithMany("Drinks")
                        .HasForeignKey("ChickenPlateId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
